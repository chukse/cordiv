sum.ESS    = length(which(pdb_dssp$rss == 'E'))
sum.BSS    = length(which(pdb_dssp$rss == 'B'))
sum.SSS    = length(which(pdb_dssp$rss == 'S'))
sum.LSS    = length(which(pdb_dssp$rss == 'L'))
+ length(which(pdb_dssp$rss == 'C'))
+ length(which(pdb_dssp$rss == '_'))
sum.helix  = sum.GSS + sum.HSS + sum.ISS
sum.betas  = sum.ESS + sum.BSS
sum.hbdif  = sum.helix + sum.betas
pdb.nres   = length(pdb_dssp$pdb)
mean.GSS   = sum.GSS/pdb.nres
mean.HSS   = sum.HSS/pdb.nres
mean.ISS   = sum.ISS/pdb.nres
mean.TSS   = sum.TSS/pdb.nres
mean.ESS   = sum.ESS/pdb.nres
mean.BSS   = sum.BSS/pdb.nres
mean.SSS   = sum.SSS/pdb.nres
mean.LSS   = sum.LSS/pdb.nres
mean.helix = sum.helix/pdb.nres
mean.betas = sum.betas/pdb.nres
mean.hbdif = sum.hbdif/pdb.nres
row = data.frame(pdb, variable = 'sum.GSS'   , value = sum.GSS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.HSS'   , value = sum.HSS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.ISS'   , value = sum.ISS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.TSS'   , value = sum.TSS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.ESS'   , value = sum.ESS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.BSS'   , value = sum.BSS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.SSS'   , value = sum.SSS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.LSS'   , value = sum.LSS   ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.helix' , value = sum.helix ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.betas' , value = sum.betas ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'sum.hbdif' , value = sum.hbdif ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.GSS'  , value = mean.GSS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.HSS'  , value = mean.HSS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.ISS'  , value = mean.ISS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.TSS'  , value = mean.TSS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.ESS'  , value = mean.ESS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.BSS'  , value = mean.BSS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.SSS'  , value = mean.SSS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.LSS'  , value = mean.LSS  ) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.helix', value = mean.helix) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.betas', value = mean.betas) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
row = data.frame(pdb, variable = 'mean.hbdif', value = mean.hbdif) ; pdb_prop_ss = rbind(pdb_prop_ss,row)
}
View(pdb_prop_ss)
sum.GSS
pdb_prop_from_residue_prop = rbind(pdb_prop_ss,pdb_prop_from_residue_prop)
View(pdb_prop_from_residue_prop)
write.csv( pdb_prop_from_residue_prop, "../tables/pdb_prop_from_residue_prop.csv", row.names=F )
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
pdb_prop_from_residue_prop$pdb = factor(pdb_prop_from_residue_prop$pdb)
pdb_CO = read.table('../../properties/pdb_prop_CO.out',header=T)
pdb_CO$pdb = factor(pdb_CO$pdb)
pdb_prop_dssp = read.table('../../properties/pdb_prop_dssp.out',header=T)
pdb_prop_dssp$pdb = factor(pdb_prop_dssp$pdb)
View(pdb_prop_dssp)
sum.nhbpa.dif = pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas
sum.nhbpa.dif = as.data.frame(pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas)
View(sum.nhbpa.dif)
new_cols = data.frame(sum.nhbpa.dif = pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas)
View(new_cols)
pdb_prop_dssp = cbind( pdb_prop_dssp,
data.frame(sum.nhbpa.dif = pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas),
data.frame(mean.nhbpa.dif = pdb_prop_dssp$mean.nhbps - pdb_prop_dssp$mean.nhbas)
)
View(pdb_prop_dssp)
pdb_prop_dssp = read.table('../../properties/pdb_prop_dssp.out',header=T)
pdb_prop_dssp$pdb = factor(pdb_prop_dssp$pdb)
View(pdb_prop_dssp)
pdb_prop_dssp = read.table('../../properties/pdb_prop_dssp.out',header=T)
pdb_prop_dssp = cbind( pdb_prop_dssp,
data.frame(sum.nhbpa.dif = pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas),
data.frame(mean.nhbpa.dif = pdb_prop_dssp$mean.nhbps - pdb_prop_dssp$mean.nhbas)
)
pdb_prop_dssp$pdb = factor(pdb_prop_dssp$pdb)
View(pdb_CO)
pdb_prop_dssp = read.table('../../properties/pdb_prop_dssp.out',header=T)
pdb_prop_dssp = cbind( pdb_prop_dssp,
data.frame(sum.nhbpa.dif = pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas),
data.frame(mean.nhbpa.dif = pdb_prop_dssp$mean.nhbps - pdb_prop_dssp$mean.nhbas)
)
View(pdb_prop_dssp)
pdb_temp = cbind( subset(pdb_CO, select = c(pdb,natoms,contact_order,contact_orderSC,contact_orderAA)),
subset(pdb_prop_dssp, select = -c(pdb,pdb_asa))
)
View(pdb_temp)
View(pdb_prop_long)
pdb_prop_long = reshape(pdb_temp, ids = rownames(pdb_temp), varying = colnames(pdb_temp), v.names = 'value', timevar = 'variable', times = colnames(pdb_temp), direction = 'long')
warnings()
View(pdb_prop_long)
pdb_prop_long = reshape(pdb_temp, ids = pdb_temp$pdb, varying = colnames(pdb_temp), v.names = 'value', timevar = 'variable', times = colnames(pdb_temp), direction = 'long')
View(pdb_prop_long)
names(pdb_temp)
!(names(pdb_temp) %in% 'pdb')
names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')])
pdb_prop_long = reshape( pdb_temp,
ids = 'pdb',
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
times = colnames(pdb_temp),
direction = 'long'
)
pdb_prop_long = reshape( pdb_temp,
ids = pdb,
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
times = colnames(pdb_temp),
direction = 'long'
)
names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')])
attribute(names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]))
attributes(names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]))
pdb_prop_long = reshape( pdb_temp,
ids = pdb,
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
times = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
direction = 'long'
)
View(pdb_temp)
pdb_prop_long = reshape( pdb_temp,
ids = pdb,
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
times = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
direction = 'long'
)
pdb_prop_long = reshape( pdb_temp,
idvar = 'pdb',
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
times = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
direction = 'long'
)
View(pdb_temp)
View(pdb_prop_long)
rownames(pdb_prop_long) = NULL
View(pdb_prop_long)
pdb_prop_long$pdb = factor(pdb_prop_long$pdb)
pdb_prop_long$variable = factor(pdb_prop_long$variable)
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
pdb_prop_dssp_CO_long = reshape( pdb_temp,
idvar = 'pdb',
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
times = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
direction = 'long'
)
rownames(pdb_prop_dssp_CO_long) = NULL
# Now combine all PDB data in a single long table:
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
all_pdb_prop$pdb = factor(all_pdb_prop$pdb)
all_pdb_prop$variable = factor(all_pdb_prop$variable)
View(all_pdb_prop)
View(pdb_prop_from_residue_prop )
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
all_pdb_prop$pdb = factor(all_pdb_prop$pdb)
for (pdb in levels(all_pdb_prop))
{
pdb_temp = all_pdb_prop[all_pdb_prop$pdb = pdb,]
}
for (pdb in levels(all_pdb_prop))
{
pdb_temp = all_pdb_prop[all_pdb_prop$pdb = pdb,]
for (pdb in levels(all_pdb_prop))
{
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
View(pdb_temp)
View(all_pdb_prop)
for (pdb in levels(all_pdb_prop))
{
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
View(pdb_temp)
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
View(all_pdb_prop)
View(pdb_prop_dssp_CO_long)
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
all_pdb_prop$pdb = factor(all_pdb_prop$pdb)
for (pdb in levels(all_pdb_prop))
{
cat(pdb)
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
levels(all_pdb_prop)
all_pdb_prop$pdb = factor(all_pdb_prop$pdb)
levels(all_pdb_prop)
pdb_prop_dssp_CO_long = reshape( pdb_temp,
idvar = 'pdb',
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
pdb_CO = read.table('../../properties/pdb_prop_CO.out',header=T)
pdb_CO$pdb = factor(pdb_CO$pdb)
pdb_prop_dssp = read.table('../../properties/pdb_prop_dssp.out',header=T)
pdb_prop_dssp = cbind( pdb_prop_dssp,
data.frame(sum.nhbpa.dif = pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas),
data.frame(mean.nhbpa.dif = pdb_prop_dssp$mean.nhbps - pdb_prop_dssp$mean.nhbas)
)
pdb_CO = read.table('../../properties/pdb_prop_CO.out',header=T)
pdb_CO$pdb = factor(pdb_CO$pdb)
pdb_prop_dssp = read.table('../../properties/pdb_prop_dssp.out',header=T)
pdb_prop_dssp = cbind( pdb_prop_dssp,
data.frame(sum.nhbpa.dif = pdb_prop_dssp$sum.nhbps - pdb_prop_dssp$sum.nhbas),
data.frame(mean.nhbpa.dif = pdb_prop_dssp$mean.nhbps - pdb_prop_dssp$mean.nhbas)
)
pdb_prop_dssp$pdb = factor(pdb_prop_dssp$pdb)
pdb_temp = cbind( subset(pdb_CO, select = c(pdb,natoms,contact_order,contact_orderSC,contact_orderAA)),
subset(pdb_prop_dssp, select = -c(pdb,pdb_asa))
)
pdb_prop_dssp_CO_long = reshape( pdb_temp,
idvar = 'pdb',
varying = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
v.names = 'value',
timevar = 'variable',
times = names(pdb_temp[,!(names(pdb_temp) %in% 'pdb')]),
direction = 'long'
)
rownames(pdb_prop_dssp_CO_long) = NULL
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
write.csv(all_pdb_prop, "../tables/all_pdb_prop.csv", row.names=F )
all_pdb_prop$pdb = factor(all_pdb_prop$pdb)
levels(all_pdb_prop$pdb)
for (pdb in levels(all_pdb_prop$pdb))
{
cat(pdb)
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
cat(pdb + \n)
cat(pdb + '\n')
for (pdb in levels(all_pdb_prop$pdb))
{
cat(pdb, '\n')
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
pdb_counter += 1
pdb_counter = 0
for (pdb in levels(all_pdb_prop$pdb))
{
pdb_counter = pdb_counter + 1
cat(pdb, '\n')
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
pdb_counter = 0
for (pdb in levels(all_pdb_prop$pdb))
{
pdb_counter = pdb_counter + 1
cat(pdb, pdb_counter, '\n')
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
pdb_counter = 0
for (pdb in levels(all_pdb_prop$pdb))
{
pdb_counter = pdb_counter + 1
cat(pdb_counter, pdb, '\n')
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
}
pdb_counter = 0
for (pdb in levels(all_pdb_prop$pdb))
{
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
pdb_counter = pdb_counter + 1
cat(pdb_counter, pdb, size(pdb_temp), '\n')
}
pdb_counter = 0
for (pdb in levels(all_pdb_prop$pdb))
{
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
pdb_counter = pdb_counter + 1
cat(pdb_counter, pdb, length(pdb_temp), '\n')
}
View(pdb_temp)
pdb_counter = 0
for (pdb in levels(all_pdb_prop$pdb))
{
pdb_temp = all_pdb_prop[all_pdb_prop$pdb == pdb,]
pdb_counter = pdb_counter + 1
cat(pdb_counter, pdb, nrow(pdb_temp), '\n')
}
pdb_prop_from_residue_prop = read.csv('../tables/pdb_prop_from_residue_prop.csv')
all_pdb_prop = rbind(pdb_prop_from_residue_prop,pdb_prop_dssp_CO_long)
write.csv(all_pdb_prop, "../tables/all_pdb_prop.csv", row.names=F )
all_pdb_prop$variable = factor(all_pdb_prop$variable)
variable_counter = 0
View(pdb_prop_dssp_CO_long)
View(all_pdb_prop)
variable_counter = 0
for (variable1 in levels(all_pdb_prop$variable))
{
temp_var1 = all_pdb_prop[all_pdb_prop$variable == variable1,]
}
View(temp_var1)
variable_counter = 0
for (variable1 in levels(all_pdb_prop$variable))
{
temp_var1 = all_pdb_prop[all_pdb_prop$variable == variable1,]
variable_counter = variable_counter + 1
cat(variable_counter, variable, nrow(tempvar1), '\n')
}
variable_counter = 0
for (variable1 in levels(all_pdb_prop$variable))
{
temp_var1 = all_pdb_prop[all_pdb_prop$variable == variable1,]
variable_counter = variable_counter + 1
cat(variable_counter, variable, nrow(temp_var1), '\n')
}
variable_counter = 0
for (variable1 in levels(all_pdb_prop$variable))
{
temp_var1 = all_pdb_prop[all_pdb_prop$variable == variable1,]
variable_counter = variable_counter + 1
cat(variable_counter, variable1, nrow(temp_var1), '\n')
}
?write.csv
temp_var1
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
}
}
View(temp_var2)
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
var_spcor = data.frame()
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
filename = paste0( '../tables/correlations/',variable1,'.csv' )
write.csv( var_spcor, file = filename, row.names=F )
View(var_spcor)
var_spcor = data.frame()
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
abs.spearman.r = abs(r),
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
filename = paste0( '../tables/correlations/',variable1,'.csv' )
write.csv( var_spcor, file = filename, row.names=F )
View(var_spcor)
var_spcor_test = var_spcor[with(var_spcor, order(-abs.spearman.r)),]
View(var_spcor_test)
View(temp_var1)
View(temp_var2)
var_spcor = var_spcor[with(var_spcor, order(-abs.spearman.r)),]
View(var_spcor)
proc.time()
var_spcor = data.frame()
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
start_time = proc.time()
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
abs.spearman.r = abs(r),
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
variable_counter = variable_counter + 1
cat(variable_counter, variable1, nrow(temp_var1), 'time taken: ', proc.time()-start_time, \n')
var_spcor = data.frame()
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
start_time = proc.time()
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
abs.spearman.r = abs(r),
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
variable_counter = variable_counter + 1
time_taken = proc.time()-start_time
cat(variable_counter, variable1, nrow(temp_var1), 'time taken: ', time_taken, \n')
var_spcor = data.frame()
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
start_time = proc.time()
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
abs.spearman.r = abs(r),
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
variable_counter = variable_counter + 1
cat(variable_counter, variable1, nrow(temp_var1), 'time taken: ', proc.time()-start_time, '\n')
system.time()
?system.time()
var_spcor = data.frame()
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
system_time = proc.time()
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
abs.spearman.r = abs(r),
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
variable_counter = variable_counter + 1
cat(variable_counter, variable1, nrow(temp_var1), 'time taken: ', system.time()-start_time, '\n')
var_spcor = data.frame()
start_time = proc.time()
for (variable2 in levels(all_pdb_prop$variable))
{
if (variable1 != variable2)
{
temp_var2 = all_pdb_prop[all_pdb_prop$variable == variable2,]
x = cor.test( temp_var1$value, temp_var2$value, method='spearman', na.action="na.omit" )
r = x$estimate
p = x$p.value
row = data.frame( var1 = variable1,
var2 = variable2,
abs.spearman.r = abs(r),
spearman.r = r,
spearman.p = p
)
var_spcor = rbind(var_spcor,row)
}
}
variable_counter = variable_counter + 1
cat(variable_counter, variable1, nrow(temp_var1), 'time taken: ', proc.time()-start_time, '\n')
source('~/GitHub/cordiv/analysis/src/get_pdb_data.r', echo=TRUE)
source('~/GitHub/cordiv/analysis/src/get_pdb_data.r', echo=TRUE)
